import time

#Hyperparameters

hop=192               #hop size (window size = 6*hop)
sr=22050              #sampling rate
min_level_db=-100     #reference values to normalize data
ref_level_db=20

shape=192              #length of time axis of split specrograms to feed to generator
vec_len=128           #length of vector generated by siamese vector
bs = 16               #batch size
#bs = 128
delta = 2.            #constant for siamese loss

def getconstants():
    res = f'hop_size: {hop} '
    res += f'shape: {shape} '
    res += f'batch size: {bs} '
    res += f'out_len siamese: {vec_len} '
    #res += f'params net: alpha: {alpha}, beta: {beta}, gamma: {gamma}, delta: {delta}'
    res += f'sr: {sr} '
    res += f'min_db: {min_level_db} '
    res += f'ref_db: {ref_level_db} '
    return res


logfile = open("log.txt", "a")
starttime = time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())
logfile.write("######### " + starttime + " Starting training" + " #########\n")

def log(msg: str, end="\n"):
    print(msg, end=end)
    if end == "\n":
        msg = msg + "\n"
    logfile.write(msg)
